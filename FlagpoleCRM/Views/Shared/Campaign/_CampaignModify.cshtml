@using Common.Enums

<style>
    .campaign-input {
        width: 35%;
        padding-right: 20px;
        border-right: 1px #5c5c5c solid;
    }

    #campaign-preview {
        width: 65%;
        margin-left: 20px;
        padding-left: 20px;
        background-color: white;
        color: #333;
        max-height: 550px;
        overflow-y: scroll;
        overflow-x: scroll;
    }

    .campaign-label {
        margin-top: 5px;
    }
</style>

<div class="modal fade" id="add-campaign-modal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" style="max-width: 1200px">
        <div class="modal-content">
            <div class="modal-header">
                @if (Model.Id == 0) {
                    <h5 class="modal-title">Add campaign</h5>
                }
                else {
                    <h5 class="modal-title">Edit campaign</h5>
                }
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div style="display:flex">
                    <div class="campaign-input">
                        <input type="text" id="campaign-id" value="@Model.Id" hidden/>
                        <label>Name <span class="mark-required-field">*</span></label>
                        <input type="text" class="form-control" id="campaign-name" value="@Model.Name"/>
                        <label class="campaign-label">Description</label>
                        <input type="text" class="form-control" id="campaign-description" value="@Model.Description"/>
                        <label class="campaign-label">Recipients</label>
                        <select class="form-control" id="campaign-recipients"></select>
                        <label class="campaign-label">Sender</label>
                        <select class="form-control" id="campaign-sender"></select>
                        <label class="campaign-label">Sender name <span class="mark-required-field">*</span></label>
                        <input type="text" class="form-control" id="campaign-sender-name" value="@Model.SenderName">
                        <label class="campaign-label">Template</label>
                        <select class="form-control" id="campaign-template"></select>
                        <label class="campaign-label">Schedule</label><br>
                        <input type="radio" id="send-now" name="campaign-schedule" value="0">
                        <label for="send-now">Send now</label><br>
                        <input type="radio" id="send-then" name="campaign-schedule" value="1" checked>
                        <label for="send-then">Send at</label><br />
                        <input type="datetime-local" class="form-control" style="color-scheme: dark" id="campaign-send-date">
                        @if (Model.SendStatus != (int)ESendStatus.Sending && Model.SendStatus != (int)ESendStatus.Complete) {
                            <a class="btn btn-primary mt-3" id="save-campaign">Save campaign</a>
                        }
                    </div>
                    <div id="campaign-preview"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function() {
        getAudiences();
        getTemplates();
        getListEmailSender();
    })

    function getAudiences() {
        $.ajax({
            url: `@Url.Action("GetAudiences", "Customer")?websiteId=@Model.WebsiteGuid`,
            type: 'get',
            success: (result) => {
                $('#campaign-recipients').html('');
                result.forEach((value, index) => {
                    var attr = '';
                    if ('@Model.AudienceId' == value.id) {
                        attr = 'selected';
                    }
                    else {
                        attr = '';
                    }
                    $('#campaign-recipients').append(`<option value="${value.id}" ${attr}>${value.name}</option>`);
                });
            }
        });
    }
    
    function getTemplates() {
        $.ajax({
            url: `@Url.Action("GetTemplates", "TemplateBuilder")?websiteId=@Model.WebsiteGuid&email=@Model.AccountEmail`,
            type: 'get',
            success: (result) => {
                $('#campaign-template').html('');
                result.forEach((value, index) => {
                    var attr = '';
                    if ('@Model.TemplateId' == value.id) {
                        attr = 'selected';
                    }
                    else {
                        attr = '';
                    }
                    $('#campaign-template').append(`<option value="${value.id}" ${attr}>${value.name}</option>`);
                    var templateId = $('#campaign-template').find(":selected").val();
                    showTemplatePreview(templateId);
                });
            }
        });
    }

    function getListEmailSender() {
        $.ajax({
            url: `@Url.Action("GetListEmailSender", "Campaign")?accountId=@Model.AccountId&websiteId=@Model.WebsiteGuid`,
            type: 'get',
            success: (result) => {
                $('#campaign-sender').html('');
                result.forEach((value, index) => {
                    var attr = '';
                    if ('@Model.EmailId' == value.id) {
                        attr = 'selected';
                    }
                    else {
                        attr = '';
                    }
                    $('#campaign-sender').append(`<option value="${value.id}" ${attr}>${value.email}</option>`);
                });
            }
        });
    }

    function showTemplatePreview(id) {
        $.ajax({
            url: `@Url.Action("GetTemplateById", "TemplateBuilder")?id=${id}`,
            type: 'get',
            success: (result) => {
                if (!result.isSuccessful) {
                    toastr_call('error', 'Error', 'Could not load template');
                }
                else {
                    var template = result.data;
                    $('#campaign-preview').html(template.content);
                }
            }
        })
    }

    $('#save-campaign').click(function() {
        var id = $('#campaign-id').val();
        var name = $('#campaign-name').val();
        var description = $('#campaign-description').val();
        var audienceId = $('#campaign-recipients').find(":selected").val();
        var templateId = $('#campaign-template').find(":selected").val();
        var emailId = $('#campaign-sender').find(":selected").val();
        var senderName = $('#campaign-sender-name').val();
        var accountId = '@Model.AccountId';
        var sendType = $('input[name=campaign-schedule]:checked').val();
        var sendDate = sendType == 0 ? getDateTimeFromDateObj(new Date()) : $('#campaign-send-date').val();
        var channel = @((int)EChannelSubscribe.Email);
        var websiteGuid = '@Model.WebsiteGuid';

        if (!name || !senderName) {
            toastr_call('error', 'Error', 'Required fields cannot be left blank');
        }
        else {
            $.ajax({
                url: `@Url.Action("UpdateCampaign", "Campaign")`,
                type: 'post',
                data: { id, name, description, audienceId, templateId, emailId, senderName, accountId, sendType, sendDate, channel, websiteGuid },
                success: (result) => {
                    if (!result.isSuccessful) {
                        toastr_call('error', 'Error', result.message);
                    }
                    else {
                        toastr_call('success', 'Success', 'Update campaign successfully');
                        loadCampaigns();
                    }
                }
            });
        }
    });

    $('input[name=campaign-schedule]').change(function() {
        if (this.value == 0) {
            $('#campaign-send-date').attr('hidden', true);
        }
        else {
            $('#campaign-send-date').attr('hidden', false);
        }
    })
</script>